#   nginx:
#     image: nginx:latest
#     ports:
#       - "80:80"
#     volumes:
#       - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
#     depends_on:
#     #  - auth-service
#       - forms-service
#       - frontend

#   # auth-service:
#   #   build: ./auth-service
#   #   ports:
#   #     - "8001:8000"
#   #   environment:
#   #     - DATABASE_URL=postgresql://user:password@db:5432/auth_db
#   #   depends_on:
#   #     - db


version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - forms-service
      - frontend
    networks:
      - app-network

  forms-service:
    build: ./forms-service
    ports:
      - "8002:8000"
    environment:
      - PORT=8000
    depends_on:
      db_forms:
        condition: service_healthy
    networks:
      - app-network

  db_forms:
    image: postgres:13
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: auth_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d auth_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge